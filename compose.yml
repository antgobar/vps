services:
  db:
    image: postgres:16
    restart: always
    user: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
      - POSTGRES_DB=labmate
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres", "-d", "labmate"]
      interval: 10s
      timeout: 5s
      retries: 5

  watchtower:
      image: containrrr/watchtower
      command:
        - "--label-enable"
        - "--interval"
        - "30"
        - "--rolling-restart"
        - "--cleanup"
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock

  reverse-proxy:
    image: traefik:v3.1
    command: 
      - "--providers.docker"
      - "--entryPoints.web.address=:80"
      - "--entryPoints.websecure.address=:443"
      - "--providers.docker.exposedbydefault=false"
      - "--certificatesresolvers.myresolver.acme.dnschallenge=true"
      - "--certificatesresolvers.myresolver.acme.dnschallenge.provider=cloudflare"
      - "--certificatesresolvers.myresolver.acme.email=$CLOUDFLARE_EMAIL"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
      - "--entryPoints.web.http.redirections.entrypoint.to=websecure"
      - "--entryPoints.web.http.redirections.entrypoint.scheme=https"
    ports:
      - "80:80"
      - "443:443"
    environment:
      - CLOUDFLARE_DNS_API_TOKEN=$CLOUDFLARE_DNS_API_TOKEN
      - CLOUDFLARE_EMAIL=$CLOUDFLARE_EMAIL
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - letsencrypt:/letsencrypt

  labmate:
    image: ghcr.io/antgobar/labmate:prod
    labels: 
      - "traefik.enable=true"
      - "traefik.http.routers.labmate.rule=Host(`$LABMATE_HOST`)"
      - "traefik.http.routers.labmate.entrypoints=websecure"
      - "traefik.http.routers.labmate.tls.certresolver=myresolver"
      - "com.centurylinklabs.watchtower.enable=true"
    environment: 
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
      - POSTGRES_HOST=db
      - POSTGRES_DB=labmate
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy

  labmate_api:
    image: ghcr.io/antgobar/labmate_api:prod
    labels: 
      - "traefik.enable=true"
      - "traefik.http.routers.labmate-api.rule=Host(`$LABMATE_API_HOST`)"
      - "traefik.http.routers.labmate-api.entrypoints=websecure"
      - "traefik.http.routers.labmate-api.tls.certresolver=myresolver"
      - "com.centurylinklabs.watchtower.enable=true"
    env_file:
      - .env

volumes:
  postgres_data:
  letsencrypt:
